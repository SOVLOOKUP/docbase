name: CI
"on":
  push:
    branches:
      - main
    tags-ignore:
      - "**"
    paths-ignore:
      - "**/*.md"
      - LICENSE
      - "**/*.gitignore"
      - .editorconfig
      - docs/**
      - test.ts
  pull_request: null

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - run: bun install

      - run: bun run build

      # 将构建产物上传为 artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  publish:
    name: Publish
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Install Node.js
        uses: actions/setup-node@v4

      - name: Set publishing config
        run: npm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Get latest version of docbase
        run: echo "LATEST_VERSION=$(npm view docbase version)" >> $GITHUB_ENV

      # 判断当前版本和最新版本是否相等
      - run: |
          if [ "${{ steps.package-version.outputs.current-version}}" != "$LATEST_VERSION" ]; then
            echo "true"
          else
            echo "false"
          fi

      # 下载构建产物
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Publish
        run: |
          cd dist
          npm publish --access public --no-git-checks

  docker:
    name: Build and Push Docker Image
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 下载构建产物
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      # 登录到 Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: gonorth
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          push: false
          tags: gonorth/docbase:latest

      # Slim it!
      # - uses: kitabisa/docker-slim-action@v1
      #   env:
      #     DSLIM_HTTP_PROBE: false
      #   with:
      #     target: gonorth/docbase:latest
      #     tag: "slim"

      # Push to the registry
      - run: docker image push "gonorth/docbase" --all-tags
